version: 0.2

env:
  parameter-store:
    DOCKER_REGISTRY_USERNAME: /cicd/docker-registry/username
    DOCKER_REGISTRY_PASSWORD: /cicd/docker-registry/password
    DOCKER_REGISTRY_URL: /cicd/docker-registry/url
    SONAR_TOKEN: /cicd/sonar/sonar-token

phases:
  install:
    runtime-versions:
      python: 3.11
      java: corretto17

  pre_build:
    commands:
      - echo "Installing dependencies..."
      - echo "Downloading Trivy for filesystem scan..."
      - wget https://github.com/aquasecurity/trivy/releases/download/v0.19.2/trivy_0.19.2_Linux-64bit.tar.gz
      - tar zxvf trivy_0.19.2_Linux-64bit.tar.gz
      - export PATH=$PATH:$PWD
      - echo "Running Trivy filesystem scan..."
      - trivy filesystem --exit-code 0 --no-progress . >> trivyfilescan.txt

      - echo "Downloading OWASP Dependency-Check..."
      - wget https://github.com/jeremylong/DependencyCheck/releases/download/v7.0.2/dependency-check-7.0.2-release.zip
      - unzip dependency-check-7.0.2-release.zip

      - echo "Setting up SonarQube Scanner..."
      - export SONAR_SCANNER_VERSION=4.7.0.2747
      - export SONAR_SCANNER_HOME=$HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux
      - curl --create-dirs -sSLo $HOME/.sonar/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux.zip
      - unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
      - export PATH=$SONAR_SCANNER_HOME/bin:$PATH
      - export SONAR_SCANNER_OPTS="-server"

  build:
    commands:
      - echo "Running tests... (if any)"
      - echo "Building Docker image..."
      - echo "$DOCKER_REGISTRY_PASSWORD" | docker login -u "$DOCKER_REGISTRY_USERNAME" --password-stdin "$DOCKER_REGISTRY_URL"
      - docker build -t "$DOCKER_REGISTRY_URL/$DOCKER_REGISTRY_USERNAME/swiggy:latest" .
      - docker push "$DOCKER_REGISTRY_URL/$DOCKER_REGISTRY_USERNAME/swiggy:latest"

  post_build:
    commands:
      - echo "Running Trivy image scan..."
      - trivy image "$DOCKER_REGISTRY_URL/$DOCKER_REGISTRY_USERNAME/swiggy:latest" >> trivyimage.txt

      - echo "Running OWASP Dependency-Check..."
      - cd dependency-check/bin
      - ./dependency-check.sh --scan ../../src --format XML --out ../../
      - cd ../.. # return to project root

      - echo "Running SonarQube analysis..."
      - echo "Checking SONAR_TOKEN"
      - if [ -z "$SONAR_TOKEN" ]; then echo "SONAR_TOKEN is empty!"; else echo "SONAR_TOKEN is set"; fi
      - sonar-scanner -X -Dsonar.projectKey=swiggy -Dsonar.sources=. -Dsonar.host.url=http://50.16.66.89:9000 -Dsonar.login=$SONAR_TOKEN -Dsonar.exclusions=**/*.map -Dsonar.dependencyCheck.reportPath=../../dependency-check-report.xml


      # - echo "Sending email notification..."
      # - aws ses send-email \
      #     --from "swapnakar967@gmail.com" \
      #     --to "swapnakar967@gmail.com" \
      #     --subject "CodeBuild Status: $CODEBUILD_BUILD_ID" \
      #     --text "Build status: $CODEBUILD_BUILD_STATUS" \
      #     --region "us-east-1"



# artifacts:
#   files:
#     - appspec.yaml
